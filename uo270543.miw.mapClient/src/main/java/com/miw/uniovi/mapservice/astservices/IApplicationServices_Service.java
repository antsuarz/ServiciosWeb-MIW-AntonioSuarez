
package com.miw.uniovi.mapservice.astservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 4.0.0-M4
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "IApplicationServices", targetNamespace = "http://ws.chargerservice.asturias/application/", wsdlLocation = "http://156.35.98.159:9091/ApplicationServices.svc?wsdl")
public class IApplicationServices_Service
    extends Service
{

    private final static URL IAPPLICATIONSERVICES_WSDL_LOCATION;
    private final static WebServiceException IAPPLICATIONSERVICES_EXCEPTION;
    private final static QName IAPPLICATIONSERVICES_QNAME = new QName("http://ws.chargerservice.asturias/application/", "IApplicationServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://156.35.98.159:9091/ApplicationServices.svc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        IAPPLICATIONSERVICES_WSDL_LOCATION = url;
        IAPPLICATIONSERVICES_EXCEPTION = e;
    }

    public IApplicationServices_Service() {
        super(__getWsdlLocation(), IAPPLICATIONSERVICES_QNAME);
    }

    public IApplicationServices_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), IAPPLICATIONSERVICES_QNAME, features);
    }

    public IApplicationServices_Service(URL wsdlLocation) {
        super(wsdlLocation, IAPPLICATIONSERVICES_QNAME);
    }

    public IApplicationServices_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, IAPPLICATIONSERVICES_QNAME, features);
    }

    public IApplicationServices_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IApplicationServices_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IApplicationServices
     */
    @WebEndpoint(name = "BasicHttpBinding_IApplicationServices")
    public IApplicationServices getBasicHttpBindingIApplicationServices() {
        return super.getPort(new QName("http://ws.chargerservice.asturias/application/", "BasicHttpBinding_IApplicationServices"), IApplicationServices.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IApplicationServices
     */
    @WebEndpoint(name = "BasicHttpBinding_IApplicationServices")
    public IApplicationServices getBasicHttpBindingIApplicationServices(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.chargerservice.asturias/application/", "BasicHttpBinding_IApplicationServices"), IApplicationServices.class, features);
    }

    private static URL __getWsdlLocation() {
        if (IAPPLICATIONSERVICES_EXCEPTION!= null) {
            throw IAPPLICATIONSERVICES_EXCEPTION;
        }
        return IAPPLICATIONSERVICES_WSDL_LOCATION;
    }

}
